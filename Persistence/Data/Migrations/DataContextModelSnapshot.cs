// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_address")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("cityIdFk");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("description");

                    b.Property<string>("Neigborhood")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("name_neigborhood");

                    b.Property<string>("NumberPlate")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("number_plate");

                    b.Property<string>("NumberVenereableWay")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("name_venereableWay");

                    b.Property<string>("NumberWay")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("number_way")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("personIdFk");

                    b.Property<string>("QuadrantPrefix")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("quadran_prefix");

                    b.Property<string>("TypeWay")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("type_way");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("PersonId");

                    b.ToTable("address", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Charge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPk")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("chargeName");

                    b.HasKey("Id");

                    b.ToTable("charge", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "seller"
                        },
                        new
                        {
                            Id = 2,
                            Name = "manager"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Administrator"
                        });
                });

            modelBuilder.Entity("Domain.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_city")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("departamentIdFk");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("city", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            Name = "Bucaramanga"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 1,
                            Name = "Florida Blanca"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 1,
                            Name = "San Gil"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 1,
                            Name = "Barichara"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Contact", b =>
                {
                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("personIdFk");

                    b.Property<int>("ContactTypeId")
                        .HasColumnType("int")
                        .HasColumnName("contactTypeIdFk");

                    b.Property<int>("ContactCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("ContactCategoryIdFk");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("description");

                    b.HasKey("PersonId", "ContactTypeId", "ContactCategoryId");

                    b.HasIndex("ContactCategoryId");

                    b.HasIndex("ContactTypeId");

                    b.ToTable("contact", (string)null);

                    b.HasData(
                        new
                        {
                            PersonId = 2,
                            ContactTypeId = 2,
                            ContactCategoryId = 1,
                            Description = "contacto@proveedor_a.com"
                        },
                        new
                        {
                            PersonId = 3,
                            ContactTypeId = 2,
                            ContactCategoryId = 1,
                            Description = "contacto@proveedor_b.com"
                        },
                        new
                        {
                            PersonId = 4,
                            ContactTypeId = 2,
                            ContactCategoryId = 1,
                            Description = "contacto@proveedor_c.com"
                        });
                });

            modelBuilder.Entity("Domain.Entities.ContactCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPk")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contactcategoryname");

                    b.HasKey("Id");

                    b.ToTable("contactCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Email"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Phone"
                        },
                        new
                        {
                            Id = 3,
                            Name = "telepathic"
                        });
                });

            modelBuilder.Entity("Domain.Entities.ContactType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPk")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contacttypename");

                    b.HasKey("Id");

                    b.ToTable("contacttype", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "staff"
                        },
                        new
                        {
                            Id = 2,
                            Name = "profesional"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_country")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("country", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Colombia"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("departmentid")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("countryIdFk");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("department", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Santander"
                        });
                });

            modelBuilder.Entity("Domain.Entities.DocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("documenttype", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "CC"
                        },
                        new
                        {
                            Id = 2,
                            Description = "TI"
                        },
                        new
                        {
                            Id = 3,
                            Description = "NIT"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPk")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChargeId")
                        .HasColumnType("int")
                        .HasColumnName("chargeIdFk");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("personIdFk");

                    b.HasKey("Id");

                    b.HasIndex("ChargeId");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("employee", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChargeId = 1,
                            PersonId = 6
                        },
                        new
                        {
                            Id = 2,
                            ChargeId = 1,
                            PersonId = 8
                        },
                        new
                        {
                            Id = 3,
                            ChargeId = 2,
                            PersonId = 9
                        },
                        new
                        {
                            Id = 4,
                            ChargeId = 3,
                            PersonId = 10
                        });
                });

            modelBuilder.Entity("Domain.Entities.Eps", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPk")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EpsTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EpsTypeId");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("eps", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.EpsEmployee", b =>
                {
                    b.Property<int>("EpsId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("EpsId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("eps_employee", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.EpsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPk")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("epstypename");

                    b.HasKey("Id");

                    b.ToTable("epstype", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("location");

                    b.Property<int>("MedicineInfoId")
                        .HasColumnType("int")
                        .HasColumnName("medicineInfoId");

                    b.HasKey("Id");

                    b.HasIndex("MedicineInfoId");

                    b.ToTable("inventory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Location = "A001",
                            MedicineInfoId = 1
                        },
                        new
                        {
                            Id = 2,
                            Location = "A002",
                            MedicineInfoId = 2
                        },
                        new
                        {
                            Id = 3,
                            Location = "C051",
                            MedicineInfoId = 3
                        },
                        new
                        {
                            Id = 4,
                            Location = "D221",
                            MedicineInfoId = 4
                        },
                        new
                        {
                            Id = 5,
                            Location = "Q011",
                            MedicineInfoId = 5
                        },
                        new
                        {
                            Id = 6,
                            Location = "C102",
                            MedicineInfoId = 6
                        },
                        new
                        {
                            Id = 7,
                            Location = "C101",
                            MedicineInfoId = 7
                        },
                        new
                        {
                            Id = 8,
                            Location = "D048",
                            MedicineInfoId = 8
                        },
                        new
                        {
                            Id = 9,
                            Location = "H048",
                            MedicineInfoId = 9
                        },
                        new
                        {
                            Id = 10,
                            Location = "H051",
                            MedicineInfoId = 10
                        });
                });

            modelBuilder.Entity("Domain.Entities.Medicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("date")
                        .HasColumnName("creation_date");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("date")
                        .HasColumnName("expiration_date");

                    b.Property<int>("InventoryId")
                        .HasColumnType("int")
                        .HasColumnName("inventoryIdFk");

                    b.Property<int>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("stateIdFk");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.HasIndex("StateId");

                    b.ToTable("medicine", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 2, 1, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4341),
                            ExpirationDate = new DateTime(2026, 3, 3, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4523),
                            InventoryId = 6,
                            StateId = 3
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 2, 26, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4536),
                            ExpirationDate = new DateTime(2025, 9, 6, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4539),
                            InventoryId = 8,
                            StateId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2022, 12, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4544),
                            ExpirationDate = new DateTime(2023, 12, 28, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4547),
                            InventoryId = 6,
                            StateId = 4
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2023, 4, 2, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4551),
                            ExpirationDate = new DateTime(2023, 10, 3, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4553),
                            InventoryId = 3,
                            StateId = 3
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2023, 5, 15, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4557),
                            ExpirationDate = new DateTime(2025, 4, 3, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4559),
                            InventoryId = 1,
                            StateId = 4
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2023, 9, 11, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4587),
                            ExpirationDate = new DateTime(2025, 11, 2, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4590),
                            InventoryId = 3,
                            StateId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2022, 11, 27, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4595),
                            ExpirationDate = new DateTime(2026, 7, 3, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4598),
                            InventoryId = 8,
                            StateId = 2
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2022, 5, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4603),
                            ExpirationDate = new DateTime(2023, 10, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4606),
                            InventoryId = 9,
                            StateId = 3
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2022, 11, 7, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4610),
                            ExpirationDate = new DateTime(2023, 10, 3, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4613),
                            InventoryId = 7,
                            StateId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreationDate = new DateTime(2022, 10, 17, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4618),
                            ExpirationDate = new DateTime(2024, 3, 29, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4621),
                            InventoryId = 3,
                            StateId = 3
                        },
                        new
                        {
                            Id = 11,
                            CreationDate = new DateTime(2022, 9, 14, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4626),
                            ExpirationDate = new DateTime(2026, 7, 30, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4628),
                            InventoryId = 2,
                            StateId = 2
                        },
                        new
                        {
                            Id = 12,
                            CreationDate = new DateTime(2022, 7, 10, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4632),
                            ExpirationDate = new DateTime(2026, 8, 16, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4634),
                            InventoryId = 7,
                            StateId = 3
                        },
                        new
                        {
                            Id = 13,
                            CreationDate = new DateTime(2022, 3, 29, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4639),
                            ExpirationDate = new DateTime(2025, 11, 20, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4641),
                            InventoryId = 6,
                            StateId = 3
                        },
                        new
                        {
                            Id = 14,
                            CreationDate = new DateTime(2023, 2, 23, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4656),
                            ExpirationDate = new DateTime(2026, 8, 17, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4659),
                            InventoryId = 2,
                            StateId = 3
                        },
                        new
                        {
                            Id = 15,
                            CreationDate = new DateTime(2023, 1, 4, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4663),
                            ExpirationDate = new DateTime(2024, 8, 12, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4676),
                            InventoryId = 6,
                            StateId = 4
                        },
                        new
                        {
                            Id = 16,
                            CreationDate = new DateTime(2022, 8, 17, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4719),
                            ExpirationDate = new DateTime(2026, 3, 22, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4723),
                            InventoryId = 1,
                            StateId = 3
                        },
                        new
                        {
                            Id = 17,
                            CreationDate = new DateTime(2022, 11, 4, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4727),
                            ExpirationDate = new DateTime(2025, 11, 12, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4730),
                            InventoryId = 4,
                            StateId = 4
                        },
                        new
                        {
                            Id = 18,
                            CreationDate = new DateTime(2022, 7, 19, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4736),
                            ExpirationDate = new DateTime(2024, 7, 28, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4738),
                            InventoryId = 4,
                            StateId = 4
                        },
                        new
                        {
                            Id = 19,
                            CreationDate = new DateTime(2022, 10, 3, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4742),
                            ExpirationDate = new DateTime(2024, 5, 9, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4744),
                            InventoryId = 7,
                            StateId = 2
                        },
                        new
                        {
                            Id = 20,
                            CreationDate = new DateTime(2022, 9, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4748),
                            ExpirationDate = new DateTime(2024, 6, 3, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4751),
                            InventoryId = 7,
                            StateId = 1
                        },
                        new
                        {
                            Id = 21,
                            CreationDate = new DateTime(2022, 3, 13, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4776),
                            ExpirationDate = new DateTime(2026, 9, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4779),
                            InventoryId = 1,
                            StateId = 3
                        },
                        new
                        {
                            Id = 22,
                            CreationDate = new DateTime(2022, 4, 18, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4785),
                            ExpirationDate = new DateTime(2025, 7, 26, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4788),
                            InventoryId = 4,
                            StateId = 2
                        },
                        new
                        {
                            Id = 23,
                            CreationDate = new DateTime(2022, 11, 8, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4792),
                            ExpirationDate = new DateTime(2025, 11, 27, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4795),
                            InventoryId = 6,
                            StateId = 2
                        },
                        new
                        {
                            Id = 24,
                            CreationDate = new DateTime(2022, 7, 20, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4798),
                            ExpirationDate = new DateTime(2026, 5, 23, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4800),
                            InventoryId = 1,
                            StateId = 4
                        },
                        new
                        {
                            Id = 25,
                            CreationDate = new DateTime(2023, 5, 15, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4804),
                            ExpirationDate = new DateTime(2024, 8, 1, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4807),
                            InventoryId = 4,
                            StateId = 2
                        },
                        new
                        {
                            Id = 26,
                            CreationDate = new DateTime(2023, 1, 13, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4811),
                            ExpirationDate = new DateTime(2025, 12, 19, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4813),
                            InventoryId = 7,
                            StateId = 1
                        },
                        new
                        {
                            Id = 27,
                            CreationDate = new DateTime(2023, 3, 24, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4818),
                            ExpirationDate = new DateTime(2025, 7, 23, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4821),
                            InventoryId = 6,
                            StateId = 1
                        },
                        new
                        {
                            Id = 28,
                            CreationDate = new DateTime(2022, 6, 1, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4826),
                            ExpirationDate = new DateTime(2024, 1, 9, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4828),
                            InventoryId = 8,
                            StateId = 3
                        },
                        new
                        {
                            Id = 29,
                            CreationDate = new DateTime(2023, 3, 7, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4833),
                            ExpirationDate = new DateTime(2023, 11, 5, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4835),
                            InventoryId = 7,
                            StateId = 4
                        },
                        new
                        {
                            Id = 30,
                            CreationDate = new DateTime(2022, 10, 3, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4839),
                            ExpirationDate = new DateTime(2026, 4, 17, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4848),
                            InventoryId = 2,
                            StateId = 1
                        },
                        new
                        {
                            Id = 31,
                            CreationDate = new DateTime(2022, 11, 29, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4857),
                            ExpirationDate = new DateTime(2024, 6, 8, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4861),
                            InventoryId = 8,
                            StateId = 2
                        },
                        new
                        {
                            Id = 32,
                            CreationDate = new DateTime(2023, 2, 12, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4864),
                            ExpirationDate = new DateTime(2026, 5, 20, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4867),
                            InventoryId = 2,
                            StateId = 4
                        },
                        new
                        {
                            Id = 33,
                            CreationDate = new DateTime(2023, 1, 17, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4871),
                            ExpirationDate = new DateTime(2025, 9, 8, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4875),
                            InventoryId = 5,
                            StateId = 3
                        },
                        new
                        {
                            Id = 34,
                            CreationDate = new DateTime(2023, 6, 24, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4880),
                            ExpirationDate = new DateTime(2024, 6, 13, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4883),
                            InventoryId = 5,
                            StateId = 2
                        },
                        new
                        {
                            Id = 35,
                            CreationDate = new DateTime(2022, 8, 11, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4888),
                            ExpirationDate = new DateTime(2024, 10, 5, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4891),
                            InventoryId = 5,
                            StateId = 3
                        },
                        new
                        {
                            Id = 36,
                            CreationDate = new DateTime(2023, 3, 13, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4894),
                            ExpirationDate = new DateTime(2026, 4, 26, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4897),
                            InventoryId = 6,
                            StateId = 3
                        },
                        new
                        {
                            Id = 37,
                            CreationDate = new DateTime(2022, 11, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4901),
                            ExpirationDate = new DateTime(2026, 4, 5, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4903),
                            InventoryId = 7,
                            StateId = 4
                        },
                        new
                        {
                            Id = 38,
                            CreationDate = new DateTime(2023, 2, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4906),
                            ExpirationDate = new DateTime(2025, 8, 23, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4908),
                            InventoryId = 9,
                            StateId = 4
                        },
                        new
                        {
                            Id = 39,
                            CreationDate = new DateTime(2022, 10, 13, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4911),
                            ExpirationDate = new DateTime(2025, 6, 20, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4914),
                            InventoryId = 6,
                            StateId = 4
                        },
                        new
                        {
                            Id = 40,
                            CreationDate = new DateTime(2023, 7, 28, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4919),
                            ExpirationDate = new DateTime(2025, 11, 21, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4922),
                            InventoryId = 9,
                            StateId = 3
                        },
                        new
                        {
                            Id = 41,
                            CreationDate = new DateTime(2022, 9, 4, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4925),
                            ExpirationDate = new DateTime(2025, 8, 1, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4928),
                            InventoryId = 2,
                            StateId = 3
                        },
                        new
                        {
                            Id = 42,
                            CreationDate = new DateTime(2023, 2, 27, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4931),
                            ExpirationDate = new DateTime(2024, 5, 5, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4933),
                            InventoryId = 2,
                            StateId = 1
                        },
                        new
                        {
                            Id = 43,
                            CreationDate = new DateTime(2022, 8, 2, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4938),
                            ExpirationDate = new DateTime(2023, 11, 16, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4940),
                            InventoryId = 1,
                            StateId = 4
                        },
                        new
                        {
                            Id = 44,
                            CreationDate = new DateTime(2021, 12, 13, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4944),
                            ExpirationDate = new DateTime(2026, 9, 9, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4946),
                            InventoryId = 3,
                            StateId = 3
                        },
                        new
                        {
                            Id = 45,
                            CreationDate = new DateTime(2023, 1, 13, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4950),
                            ExpirationDate = new DateTime(2025, 12, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4953),
                            InventoryId = 8,
                            StateId = 3
                        },
                        new
                        {
                            Id = 46,
                            CreationDate = new DateTime(2022, 4, 19, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4957),
                            ExpirationDate = new DateTime(2024, 12, 16, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4960),
                            InventoryId = 6,
                            StateId = 4
                        },
                        new
                        {
                            Id = 47,
                            CreationDate = new DateTime(2023, 3, 17, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4965),
                            ExpirationDate = new DateTime(2024, 1, 20, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4967),
                            InventoryId = 4,
                            StateId = 2
                        },
                        new
                        {
                            Id = 48,
                            CreationDate = new DateTime(2022, 9, 19, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4971),
                            ExpirationDate = new DateTime(2023, 12, 29, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4975),
                            InventoryId = 7,
                            StateId = 3
                        },
                        new
                        {
                            Id = 49,
                            CreationDate = new DateTime(2023, 4, 3, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4980),
                            ExpirationDate = new DateTime(2025, 7, 19, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4983),
                            InventoryId = 4,
                            StateId = 4
                        },
                        new
                        {
                            Id = 50,
                            CreationDate = new DateTime(2022, 6, 7, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4987),
                            ExpirationDate = new DateTime(2024, 3, 21, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4990),
                            InventoryId = 4,
                            StateId = 3
                        },
                        new
                        {
                            Id = 51,
                            CreationDate = new DateTime(2022, 7, 4, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4993),
                            ExpirationDate = new DateTime(2026, 1, 9, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(4996),
                            InventoryId = 4,
                            StateId = 4
                        },
                        new
                        {
                            Id = 52,
                            CreationDate = new DateTime(2022, 12, 13, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5000),
                            ExpirationDate = new DateTime(2026, 9, 15, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5003),
                            InventoryId = 6,
                            StateId = 3
                        },
                        new
                        {
                            Id = 53,
                            CreationDate = new DateTime(2022, 4, 3, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5007),
                            ExpirationDate = new DateTime(2025, 4, 23, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5010),
                            InventoryId = 8,
                            StateId = 2
                        },
                        new
                        {
                            Id = 54,
                            CreationDate = new DateTime(2022, 12, 17, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5015),
                            ExpirationDate = new DateTime(2024, 9, 24, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5018),
                            InventoryId = 2,
                            StateId = 3
                        },
                        new
                        {
                            Id = 55,
                            CreationDate = new DateTime(2022, 7, 13, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5022),
                            ExpirationDate = new DateTime(2025, 5, 10, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5025),
                            InventoryId = 7,
                            StateId = 4
                        },
                        new
                        {
                            Id = 56,
                            CreationDate = new DateTime(2021, 12, 1, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5028),
                            ExpirationDate = new DateTime(2025, 7, 19, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5031),
                            InventoryId = 7,
                            StateId = 1
                        },
                        new
                        {
                            Id = 57,
                            CreationDate = new DateTime(2023, 2, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5034),
                            ExpirationDate = new DateTime(2026, 2, 16, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5038),
                            InventoryId = 9,
                            StateId = 3
                        },
                        new
                        {
                            Id = 58,
                            CreationDate = new DateTime(2023, 1, 24, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5041),
                            ExpirationDate = new DateTime(2024, 4, 9, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5044),
                            InventoryId = 7,
                            StateId = 3
                        },
                        new
                        {
                            Id = 59,
                            CreationDate = new DateTime(2022, 9, 9, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5048),
                            ExpirationDate = new DateTime(2024, 3, 10, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5051),
                            InventoryId = 5,
                            StateId = 2
                        },
                        new
                        {
                            Id = 60,
                            CreationDate = new DateTime(2023, 1, 17, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5055),
                            ExpirationDate = new DateTime(2026, 8, 27, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5057),
                            InventoryId = 7,
                            StateId = 1
                        },
                        new
                        {
                            Id = 61,
                            CreationDate = new DateTime(2023, 9, 3, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5062),
                            ExpirationDate = new DateTime(2025, 6, 6, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5065),
                            InventoryId = 8,
                            StateId = 1
                        },
                        new
                        {
                            Id = 62,
                            CreationDate = new DateTime(2022, 5, 9, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5068),
                            ExpirationDate = new DateTime(2024, 8, 20, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5070),
                            InventoryId = 6,
                            StateId = 1
                        },
                        new
                        {
                            Id = 63,
                            CreationDate = new DateTime(2022, 11, 26, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5073),
                            ExpirationDate = new DateTime(2025, 12, 23, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5076),
                            InventoryId = 1,
                            StateId = 2
                        },
                        new
                        {
                            Id = 64,
                            CreationDate = new DateTime(2023, 1, 3, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5079),
                            ExpirationDate = new DateTime(2025, 4, 20, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5081),
                            InventoryId = 1,
                            StateId = 2
                        },
                        new
                        {
                            Id = 65,
                            CreationDate = new DateTime(2023, 4, 16, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5084),
                            ExpirationDate = new DateTime(2025, 12, 16, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5087),
                            InventoryId = 6,
                            StateId = 3
                        },
                        new
                        {
                            Id = 66,
                            CreationDate = new DateTime(2022, 9, 9, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5092),
                            ExpirationDate = new DateTime(2024, 1, 1, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5095),
                            InventoryId = 1,
                            StateId = 4
                        },
                        new
                        {
                            Id = 67,
                            CreationDate = new DateTime(2023, 8, 8, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5099),
                            ExpirationDate = new DateTime(2025, 10, 23, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5101),
                            InventoryId = 8,
                            StateId = 4
                        },
                        new
                        {
                            Id = 68,
                            CreationDate = new DateTime(2023, 6, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5105),
                            ExpirationDate = new DateTime(2024, 7, 16, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5107),
                            InventoryId = 4,
                            StateId = 3
                        },
                        new
                        {
                            Id = 69,
                            CreationDate = new DateTime(2023, 3, 23, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5112),
                            ExpirationDate = new DateTime(2026, 5, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5114),
                            InventoryId = 8,
                            StateId = 2
                        },
                        new
                        {
                            Id = 70,
                            CreationDate = new DateTime(2023, 3, 6, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5117),
                            ExpirationDate = new DateTime(2026, 3, 17, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5120),
                            InventoryId = 7,
                            StateId = 2
                        },
                        new
                        {
                            Id = 71,
                            CreationDate = new DateTime(2022, 12, 18, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5123),
                            ExpirationDate = new DateTime(2026, 9, 9, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5125),
                            InventoryId = 6,
                            StateId = 4
                        },
                        new
                        {
                            Id = 72,
                            CreationDate = new DateTime(2022, 6, 14, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5129),
                            ExpirationDate = new DateTime(2023, 10, 28, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5132),
                            InventoryId = 2,
                            StateId = 1
                        },
                        new
                        {
                            Id = 73,
                            CreationDate = new DateTime(2022, 10, 1, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5135),
                            ExpirationDate = new DateTime(2024, 10, 30, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5138),
                            InventoryId = 1,
                            StateId = 2
                        },
                        new
                        {
                            Id = 74,
                            CreationDate = new DateTime(2022, 4, 29, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5142),
                            ExpirationDate = new DateTime(2023, 11, 22, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5145),
                            InventoryId = 4,
                            StateId = 3
                        },
                        new
                        {
                            Id = 75,
                            CreationDate = new DateTime(2022, 11, 4, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5148),
                            ExpirationDate = new DateTime(2025, 4, 27, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5151),
                            InventoryId = 7,
                            StateId = 2
                        },
                        new
                        {
                            Id = 76,
                            CreationDate = new DateTime(2022, 11, 8, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5155),
                            ExpirationDate = new DateTime(2024, 8, 16, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5157),
                            InventoryId = 3,
                            StateId = 1
                        },
                        new
                        {
                            Id = 77,
                            CreationDate = new DateTime(2022, 9, 19, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5160),
                            ExpirationDate = new DateTime(2025, 12, 17, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5163),
                            InventoryId = 9,
                            StateId = 4
                        },
                        new
                        {
                            Id = 78,
                            CreationDate = new DateTime(2023, 3, 24, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5166),
                            ExpirationDate = new DateTime(2025, 3, 31, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5169),
                            InventoryId = 1,
                            StateId = 4
                        },
                        new
                        {
                            Id = 79,
                            CreationDate = new DateTime(2022, 10, 24, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5173),
                            ExpirationDate = new DateTime(2023, 10, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5175),
                            InventoryId = 7,
                            StateId = 4
                        },
                        new
                        {
                            Id = 80,
                            CreationDate = new DateTime(2021, 12, 27, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5178),
                            ExpirationDate = new DateTime(2024, 5, 12, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5180),
                            InventoryId = 1,
                            StateId = 4
                        },
                        new
                        {
                            Id = 81,
                            CreationDate = new DateTime(2022, 9, 17, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5184),
                            ExpirationDate = new DateTime(2023, 10, 7, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5187),
                            InventoryId = 4,
                            StateId = 3
                        },
                        new
                        {
                            Id = 82,
                            CreationDate = new DateTime(2022, 4, 26, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5191),
                            ExpirationDate = new DateTime(2024, 11, 9, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5193),
                            InventoryId = 7,
                            StateId = 1
                        },
                        new
                        {
                            Id = 83,
                            CreationDate = new DateTime(2023, 6, 10, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5197),
                            ExpirationDate = new DateTime(2024, 1, 18, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5200),
                            InventoryId = 8,
                            StateId = 2
                        },
                        new
                        {
                            Id = 84,
                            CreationDate = new DateTime(2022, 8, 24, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5204),
                            ExpirationDate = new DateTime(2025, 2, 28, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5206),
                            InventoryId = 9,
                            StateId = 3
                        },
                        new
                        {
                            Id = 85,
                            CreationDate = new DateTime(2022, 12, 13, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5210),
                            ExpirationDate = new DateTime(2026, 9, 17, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5213),
                            InventoryId = 8,
                            StateId = 4
                        },
                        new
                        {
                            Id = 86,
                            CreationDate = new DateTime(2022, 1, 20, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5217),
                            ExpirationDate = new DateTime(2024, 11, 16, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5219),
                            InventoryId = 6,
                            StateId = 1
                        },
                        new
                        {
                            Id = 87,
                            CreationDate = new DateTime(2022, 7, 8, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5222),
                            ExpirationDate = new DateTime(2024, 7, 28, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5225),
                            InventoryId = 2,
                            StateId = 1
                        },
                        new
                        {
                            Id = 88,
                            CreationDate = new DateTime(2022, 12, 8, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5229),
                            ExpirationDate = new DateTime(2025, 4, 5, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5231),
                            InventoryId = 2,
                            StateId = 3
                        },
                        new
                        {
                            Id = 89,
                            CreationDate = new DateTime(2022, 7, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5248),
                            ExpirationDate = new DateTime(2026, 1, 30, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5250),
                            InventoryId = 6,
                            StateId = 1
                        },
                        new
                        {
                            Id = 90,
                            CreationDate = new DateTime(2023, 6, 16, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5254),
                            ExpirationDate = new DateTime(2024, 5, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5256),
                            InventoryId = 2,
                            StateId = 3
                        },
                        new
                        {
                            Id = 91,
                            CreationDate = new DateTime(2022, 6, 28, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5259),
                            ExpirationDate = new DateTime(2025, 9, 12, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5262),
                            InventoryId = 6,
                            StateId = 2
                        },
                        new
                        {
                            Id = 92,
                            CreationDate = new DateTime(2022, 2, 8, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5265),
                            ExpirationDate = new DateTime(2026, 8, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5268),
                            InventoryId = 5,
                            StateId = 1
                        },
                        new
                        {
                            Id = 93,
                            CreationDate = new DateTime(2022, 12, 4, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5272),
                            ExpirationDate = new DateTime(2025, 9, 23, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5274),
                            InventoryId = 3,
                            StateId = 4
                        },
                        new
                        {
                            Id = 94,
                            CreationDate = new DateTime(2022, 3, 7, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5278),
                            ExpirationDate = new DateTime(2025, 1, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5280),
                            InventoryId = 1,
                            StateId = 4
                        },
                        new
                        {
                            Id = 95,
                            CreationDate = new DateTime(2021, 12, 19, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5284),
                            ExpirationDate = new DateTime(2026, 8, 8, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5286),
                            InventoryId = 9,
                            StateId = 3
                        },
                        new
                        {
                            Id = 96,
                            CreationDate = new DateTime(2023, 7, 10, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5290),
                            ExpirationDate = new DateTime(2025, 3, 26, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5293),
                            InventoryId = 2,
                            StateId = 3
                        },
                        new
                        {
                            Id = 97,
                            CreationDate = new DateTime(2022, 10, 9, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5295),
                            ExpirationDate = new DateTime(2026, 4, 18, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5298),
                            InventoryId = 9,
                            StateId = 4
                        },
                        new
                        {
                            Id = 98,
                            CreationDate = new DateTime(2022, 8, 7, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5302),
                            ExpirationDate = new DateTime(2026, 1, 11, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5305),
                            InventoryId = 6,
                            StateId = 4
                        },
                        new
                        {
                            Id = 99,
                            CreationDate = new DateTime(2022, 6, 7, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5309),
                            ExpirationDate = new DateTime(2026, 5, 9, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5311),
                            InventoryId = 9,
                            StateId = 2
                        },
                        new
                        {
                            Id = 100,
                            CreationDate = new DateTime(2023, 3, 7, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5314),
                            ExpirationDate = new DateTime(2024, 4, 5, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5316),
                            InventoryId = 4,
                            StateId = 1
                        },
                        new
                        {
                            Id = 101,
                            CreationDate = new DateTime(2023, 4, 8, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5321),
                            ExpirationDate = new DateTime(2024, 5, 3, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5324),
                            InventoryId = 1,
                            StateId = 3
                        },
                        new
                        {
                            Id = 102,
                            CreationDate = new DateTime(2023, 2, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5328),
                            ExpirationDate = new DateTime(2025, 8, 1, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5330),
                            InventoryId = 5,
                            StateId = 2
                        },
                        new
                        {
                            Id = 103,
                            CreationDate = new DateTime(2023, 3, 3, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5333),
                            ExpirationDate = new DateTime(2024, 4, 19, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5336),
                            InventoryId = 5,
                            StateId = 1
                        },
                        new
                        {
                            Id = 104,
                            CreationDate = new DateTime(2023, 6, 16, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5339),
                            ExpirationDate = new DateTime(2026, 4, 6, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5342),
                            InventoryId = 1,
                            StateId = 2
                        },
                        new
                        {
                            Id = 105,
                            CreationDate = new DateTime(2023, 5, 14, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5345),
                            ExpirationDate = new DateTime(2026, 3, 22, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5348),
                            InventoryId = 9,
                            StateId = 3
                        },
                        new
                        {
                            Id = 106,
                            CreationDate = new DateTime(2022, 8, 15, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5352),
                            ExpirationDate = new DateTime(2026, 8, 27, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5355),
                            InventoryId = 4,
                            StateId = 3
                        },
                        new
                        {
                            Id = 107,
                            CreationDate = new DateTime(2022, 6, 7, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5358),
                            ExpirationDate = new DateTime(2024, 3, 20, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5361),
                            InventoryId = 8,
                            StateId = 3
                        },
                        new
                        {
                            Id = 108,
                            CreationDate = new DateTime(2021, 12, 14, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5364),
                            ExpirationDate = new DateTime(2024, 5, 11, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5368),
                            InventoryId = 8,
                            StateId = 3
                        },
                        new
                        {
                            Id = 109,
                            CreationDate = new DateTime(2022, 10, 16, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5372),
                            ExpirationDate = new DateTime(2023, 10, 28, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5374),
                            InventoryId = 6,
                            StateId = 3
                        },
                        new
                        {
                            Id = 110,
                            CreationDate = new DateTime(2022, 10, 29, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5377),
                            ExpirationDate = new DateTime(2025, 7, 10, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5380),
                            InventoryId = 8,
                            StateId = 3
                        },
                        new
                        {
                            Id = 111,
                            CreationDate = new DateTime(2023, 2, 21, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5383),
                            ExpirationDate = new DateTime(2026, 3, 8, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5385),
                            InventoryId = 5,
                            StateId = 1
                        },
                        new
                        {
                            Id = 112,
                            CreationDate = new DateTime(2022, 7, 2, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5389),
                            ExpirationDate = new DateTime(2023, 11, 15, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5392),
                            InventoryId = 9,
                            StateId = 1
                        },
                        new
                        {
                            Id = 113,
                            CreationDate = new DateTime(2023, 4, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5395),
                            ExpirationDate = new DateTime(2024, 5, 17, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5397),
                            InventoryId = 5,
                            StateId = 4
                        },
                        new
                        {
                            Id = 114,
                            CreationDate = new DateTime(2022, 3, 20, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5401),
                            ExpirationDate = new DateTime(2025, 6, 9, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5404),
                            InventoryId = 9,
                            StateId = 3
                        },
                        new
                        {
                            Id = 115,
                            CreationDate = new DateTime(2023, 6, 1, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5407),
                            ExpirationDate = new DateTime(2026, 8, 31, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5409),
                            InventoryId = 9,
                            StateId = 1
                        },
                        new
                        {
                            Id = 116,
                            CreationDate = new DateTime(2022, 12, 1, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5412),
                            ExpirationDate = new DateTime(2025, 4, 24, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5415),
                            InventoryId = 5,
                            StateId = 2
                        },
                        new
                        {
                            Id = 117,
                            CreationDate = new DateTime(2023, 2, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5418),
                            ExpirationDate = new DateTime(2024, 6, 7, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5420),
                            InventoryId = 4,
                            StateId = 1
                        },
                        new
                        {
                            Id = 118,
                            CreationDate = new DateTime(2022, 8, 7, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5424),
                            ExpirationDate = new DateTime(2024, 7, 29, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5427),
                            InventoryId = 6,
                            StateId = 2
                        },
                        new
                        {
                            Id = 119,
                            CreationDate = new DateTime(2022, 8, 5, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5430),
                            ExpirationDate = new DateTime(2025, 9, 10, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5433),
                            InventoryId = 9,
                            StateId = 3
                        },
                        new
                        {
                            Id = 120,
                            CreationDate = new DateTime(2022, 9, 13, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5436),
                            ExpirationDate = new DateTime(2026, 9, 5, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5438),
                            InventoryId = 2,
                            StateId = 1
                        },
                        new
                        {
                            Id = 121,
                            CreationDate = new DateTime(2022, 9, 1, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5442),
                            ExpirationDate = new DateTime(2024, 6, 2, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5444),
                            InventoryId = 6,
                            StateId = 1
                        },
                        new
                        {
                            Id = 122,
                            CreationDate = new DateTime(2022, 5, 6, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5447),
                            ExpirationDate = new DateTime(2024, 8, 20, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5450),
                            InventoryId = 5,
                            StateId = 3
                        },
                        new
                        {
                            Id = 123,
                            CreationDate = new DateTime(2022, 4, 23, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5454),
                            ExpirationDate = new DateTime(2026, 4, 30, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5456),
                            InventoryId = 9,
                            StateId = 2
                        },
                        new
                        {
                            Id = 124,
                            CreationDate = new DateTime(2023, 6, 15, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5459),
                            ExpirationDate = new DateTime(2025, 7, 18, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5461),
                            InventoryId = 1,
                            StateId = 4
                        },
                        new
                        {
                            Id = 125,
                            CreationDate = new DateTime(2022, 9, 20, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5465),
                            ExpirationDate = new DateTime(2026, 6, 7, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5467),
                            InventoryId = 2,
                            StateId = 3
                        },
                        new
                        {
                            Id = 126,
                            CreationDate = new DateTime(2022, 7, 13, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5471),
                            ExpirationDate = new DateTime(2025, 7, 23, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5474),
                            InventoryId = 6,
                            StateId = 4
                        },
                        new
                        {
                            Id = 127,
                            CreationDate = new DateTime(2022, 3, 24, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5477),
                            ExpirationDate = new DateTime(2025, 6, 11, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5480),
                            InventoryId = 5,
                            StateId = 4
                        },
                        new
                        {
                            Id = 128,
                            CreationDate = new DateTime(2022, 11, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5482),
                            ExpirationDate = new DateTime(2024, 4, 4, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5486),
                            InventoryId = 3,
                            StateId = 4
                        },
                        new
                        {
                            Id = 129,
                            CreationDate = new DateTime(2022, 5, 1, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5489),
                            ExpirationDate = new DateTime(2025, 11, 3, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5491),
                            InventoryId = 4,
                            StateId = 4
                        },
                        new
                        {
                            Id = 130,
                            CreationDate = new DateTime(2022, 6, 17, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5497),
                            ExpirationDate = new DateTime(2026, 8, 11, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5500),
                            InventoryId = 5,
                            StateId = 4
                        },
                        new
                        {
                            Id = 131,
                            CreationDate = new DateTime(2023, 2, 5, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5504),
                            ExpirationDate = new DateTime(2026, 4, 16, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5506),
                            InventoryId = 5,
                            StateId = 1
                        },
                        new
                        {
                            Id = 132,
                            CreationDate = new DateTime(2023, 1, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5510),
                            ExpirationDate = new DateTime(2023, 10, 27, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5512),
                            InventoryId = 6,
                            StateId = 3
                        },
                        new
                        {
                            Id = 133,
                            CreationDate = new DateTime(2022, 4, 3, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5516),
                            ExpirationDate = new DateTime(2026, 7, 27, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5518),
                            InventoryId = 7,
                            StateId = 3
                        },
                        new
                        {
                            Id = 134,
                            CreationDate = new DateTime(2022, 11, 26, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5521),
                            ExpirationDate = new DateTime(2023, 10, 6, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5524),
                            InventoryId = 5,
                            StateId = 1
                        },
                        new
                        {
                            Id = 135,
                            CreationDate = new DateTime(2022, 4, 20, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5527),
                            ExpirationDate = new DateTime(2024, 7, 27, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5530),
                            InventoryId = 3,
                            StateId = 3
                        },
                        new
                        {
                            Id = 136,
                            CreationDate = new DateTime(2023, 2, 16, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5535),
                            ExpirationDate = new DateTime(2024, 11, 24, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5537),
                            InventoryId = 6,
                            StateId = 1
                        },
                        new
                        {
                            Id = 137,
                            CreationDate = new DateTime(2022, 10, 12, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5540),
                            ExpirationDate = new DateTime(2026, 4, 28, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5543),
                            InventoryId = 7,
                            StateId = 2
                        },
                        new
                        {
                            Id = 138,
                            CreationDate = new DateTime(2022, 1, 15, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5547),
                            ExpirationDate = new DateTime(2024, 6, 27, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5550),
                            InventoryId = 3,
                            StateId = 1
                        },
                        new
                        {
                            Id = 139,
                            CreationDate = new DateTime(2022, 1, 9, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5554),
                            ExpirationDate = new DateTime(2025, 11, 16, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5556),
                            InventoryId = 5,
                            StateId = 1
                        },
                        new
                        {
                            Id = 140,
                            CreationDate = new DateTime(2022, 10, 6, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5559),
                            ExpirationDate = new DateTime(2025, 7, 31, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5562),
                            InventoryId = 5,
                            StateId = 3
                        },
                        new
                        {
                            Id = 141,
                            CreationDate = new DateTime(2023, 3, 19, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5564),
                            ExpirationDate = new DateTime(2026, 6, 23, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5567),
                            InventoryId = 7,
                            StateId = 2
                        },
                        new
                        {
                            Id = 142,
                            CreationDate = new DateTime(2023, 3, 27, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5570),
                            ExpirationDate = new DateTime(2026, 8, 20, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5572),
                            InventoryId = 4,
                            StateId = 3
                        },
                        new
                        {
                            Id = 143,
                            CreationDate = new DateTime(2023, 7, 27, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5574),
                            ExpirationDate = new DateTime(2023, 11, 5, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5577),
                            InventoryId = 3,
                            StateId = 1
                        },
                        new
                        {
                            Id = 144,
                            CreationDate = new DateTime(2022, 12, 13, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5579),
                            ExpirationDate = new DateTime(2025, 5, 30, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5582),
                            InventoryId = 2,
                            StateId = 2
                        },
                        new
                        {
                            Id = 145,
                            CreationDate = new DateTime(2022, 10, 29, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5584),
                            ExpirationDate = new DateTime(2025, 7, 30, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5586),
                            InventoryId = 7,
                            StateId = 3
                        },
                        new
                        {
                            Id = 146,
                            CreationDate = new DateTime(2022, 10, 11, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5589),
                            ExpirationDate = new DateTime(2024, 10, 16, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5591),
                            InventoryId = 3,
                            StateId = 3
                        },
                        new
                        {
                            Id = 147,
                            CreationDate = new DateTime(2022, 12, 10, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5595),
                            ExpirationDate = new DateTime(2024, 2, 21, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5598),
                            InventoryId = 9,
                            StateId = 1
                        },
                        new
                        {
                            Id = 148,
                            CreationDate = new DateTime(2022, 11, 22, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5601),
                            ExpirationDate = new DateTime(2025, 8, 22, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5604),
                            InventoryId = 9,
                            StateId = 3
                        },
                        new
                        {
                            Id = 149,
                            CreationDate = new DateTime(2022, 2, 24, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5608),
                            ExpirationDate = new DateTime(2024, 8, 17, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5610),
                            InventoryId = 2,
                            StateId = 2
                        },
                        new
                        {
                            Id = 150,
                            CreationDate = new DateTime(2022, 6, 29, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5614),
                            ExpirationDate = new DateTime(2024, 6, 30, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5616),
                            InventoryId = 2,
                            StateId = 2
                        },
                        new
                        {
                            Id = 151,
                            CreationDate = new DateTime(2022, 10, 27, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5621),
                            ExpirationDate = new DateTime(2023, 10, 23, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5624),
                            InventoryId = 5,
                            StateId = 1
                        },
                        new
                        {
                            Id = 152,
                            CreationDate = new DateTime(2022, 5, 28, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5626),
                            ExpirationDate = new DateTime(2026, 3, 13, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5629),
                            InventoryId = 6,
                            StateId = 1
                        },
                        new
                        {
                            Id = 153,
                            CreationDate = new DateTime(2022, 9, 27, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5646),
                            ExpirationDate = new DateTime(2025, 1, 28, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5648),
                            InventoryId = 6,
                            StateId = 4
                        },
                        new
                        {
                            Id = 154,
                            CreationDate = new DateTime(2022, 10, 12, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5653),
                            ExpirationDate = new DateTime(2025, 10, 13, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5656),
                            InventoryId = 9,
                            StateId = 3
                        },
                        new
                        {
                            Id = 155,
                            CreationDate = new DateTime(2022, 6, 15, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5659),
                            ExpirationDate = new DateTime(2025, 11, 5, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5662),
                            InventoryId = 2,
                            StateId = 4
                        },
                        new
                        {
                            Id = 156,
                            CreationDate = new DateTime(2023, 2, 3, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5665),
                            ExpirationDate = new DateTime(2026, 7, 18, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5668),
                            InventoryId = 9,
                            StateId = 2
                        },
                        new
                        {
                            Id = 157,
                            CreationDate = new DateTime(2022, 2, 3, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5671),
                            ExpirationDate = new DateTime(2025, 5, 11, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5674),
                            InventoryId = 8,
                            StateId = 3
                        },
                        new
                        {
                            Id = 158,
                            CreationDate = new DateTime(2023, 7, 27, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5677),
                            ExpirationDate = new DateTime(2023, 12, 23, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5680),
                            InventoryId = 8,
                            StateId = 1
                        },
                        new
                        {
                            Id = 159,
                            CreationDate = new DateTime(2023, 5, 9, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5683),
                            ExpirationDate = new DateTime(2025, 12, 31, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5685),
                            InventoryId = 1,
                            StateId = 1
                        },
                        new
                        {
                            Id = 160,
                            CreationDate = new DateTime(2023, 1, 29, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5688),
                            ExpirationDate = new DateTime(2026, 4, 20, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5691),
                            InventoryId = 5,
                            StateId = 3
                        },
                        new
                        {
                            Id = 161,
                            CreationDate = new DateTime(2022, 9, 18, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5695),
                            ExpirationDate = new DateTime(2024, 4, 3, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5697),
                            InventoryId = 4,
                            StateId = 4
                        },
                        new
                        {
                            Id = 162,
                            CreationDate = new DateTime(2022, 12, 27, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5701),
                            ExpirationDate = new DateTime(2023, 11, 7, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5704),
                            InventoryId = 1,
                            StateId = 1
                        },
                        new
                        {
                            Id = 163,
                            CreationDate = new DateTime(2023, 3, 20, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5707),
                            ExpirationDate = new DateTime(2024, 4, 8, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5709),
                            InventoryId = 9,
                            StateId = 3
                        },
                        new
                        {
                            Id = 164,
                            CreationDate = new DateTime(2023, 5, 26, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5712),
                            ExpirationDate = new DateTime(2026, 8, 7, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5715),
                            InventoryId = 8,
                            StateId = 1
                        },
                        new
                        {
                            Id = 165,
                            CreationDate = new DateTime(2023, 1, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5718),
                            ExpirationDate = new DateTime(2025, 6, 3, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5721),
                            InventoryId = 7,
                            StateId = 4
                        },
                        new
                        {
                            Id = 166,
                            CreationDate = new DateTime(2022, 4, 27, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5724),
                            ExpirationDate = new DateTime(2025, 10, 30, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5727),
                            InventoryId = 3,
                            StateId = 2
                        },
                        new
                        {
                            Id = 167,
                            CreationDate = new DateTime(2022, 9, 16, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5730),
                            ExpirationDate = new DateTime(2024, 8, 22, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5734),
                            InventoryId = 6,
                            StateId = 4
                        },
                        new
                        {
                            Id = 168,
                            CreationDate = new DateTime(2022, 8, 22, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5739),
                            ExpirationDate = new DateTime(2025, 6, 4, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5741),
                            InventoryId = 1,
                            StateId = 3
                        },
                        new
                        {
                            Id = 169,
                            CreationDate = new DateTime(2022, 8, 2, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5745),
                            ExpirationDate = new DateTime(2026, 1, 21, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5748),
                            InventoryId = 4,
                            StateId = 2
                        },
                        new
                        {
                            Id = 170,
                            CreationDate = new DateTime(2022, 8, 9, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5751),
                            ExpirationDate = new DateTime(2024, 8, 20, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5754),
                            InventoryId = 6,
                            StateId = 4
                        },
                        new
                        {
                            Id = 171,
                            CreationDate = new DateTime(2022, 9, 2, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5758),
                            ExpirationDate = new DateTime(2023, 12, 12, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5760),
                            InventoryId = 8,
                            StateId = 1
                        },
                        new
                        {
                            Id = 172,
                            CreationDate = new DateTime(2023, 7, 21, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5764),
                            ExpirationDate = new DateTime(2023, 12, 28, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5766),
                            InventoryId = 8,
                            StateId = 1
                        },
                        new
                        {
                            Id = 173,
                            CreationDate = new DateTime(2022, 4, 19, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5769),
                            ExpirationDate = new DateTime(2025, 7, 29, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5773),
                            InventoryId = 3,
                            StateId = 3
                        },
                        new
                        {
                            Id = 174,
                            CreationDate = new DateTime(2022, 10, 5, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5777),
                            ExpirationDate = new DateTime(2025, 2, 13, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5780),
                            InventoryId = 7,
                            StateId = 4
                        },
                        new
                        {
                            Id = 175,
                            CreationDate = new DateTime(2023, 8, 21, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5784),
                            ExpirationDate = new DateTime(2026, 7, 26, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5786),
                            InventoryId = 1,
                            StateId = 4
                        },
                        new
                        {
                            Id = 176,
                            CreationDate = new DateTime(2022, 4, 9, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5789),
                            ExpirationDate = new DateTime(2026, 7, 19, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5791),
                            InventoryId = 3,
                            StateId = 2
                        },
                        new
                        {
                            Id = 177,
                            CreationDate = new DateTime(2022, 7, 8, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5794),
                            ExpirationDate = new DateTime(2025, 2, 17, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5797),
                            InventoryId = 6,
                            StateId = 2
                        },
                        new
                        {
                            Id = 178,
                            CreationDate = new DateTime(2022, 5, 15, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5801),
                            ExpirationDate = new DateTime(2025, 10, 15, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5803),
                            InventoryId = 1,
                            StateId = 1
                        },
                        new
                        {
                            Id = 179,
                            CreationDate = new DateTime(2022, 12, 3, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5806),
                            ExpirationDate = new DateTime(2025, 3, 22, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5808),
                            InventoryId = 1,
                            StateId = 4
                        },
                        new
                        {
                            Id = 180,
                            CreationDate = new DateTime(2022, 5, 29, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5811),
                            ExpirationDate = new DateTime(2025, 4, 19, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5813),
                            InventoryId = 1,
                            StateId = 3
                        },
                        new
                        {
                            Id = 181,
                            CreationDate = new DateTime(2022, 8, 22, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5816),
                            ExpirationDate = new DateTime(2025, 7, 14, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5819),
                            InventoryId = 9,
                            StateId = 2
                        },
                        new
                        {
                            Id = 182,
                            CreationDate = new DateTime(2022, 12, 13, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5822),
                            ExpirationDate = new DateTime(2025, 4, 21, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5824),
                            InventoryId = 5,
                            StateId = 1
                        },
                        new
                        {
                            Id = 183,
                            CreationDate = new DateTime(2022, 11, 11, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5828),
                            ExpirationDate = new DateTime(2026, 7, 16, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5830),
                            InventoryId = 5,
                            StateId = 2
                        },
                        new
                        {
                            Id = 184,
                            CreationDate = new DateTime(2022, 11, 9, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5833),
                            ExpirationDate = new DateTime(2024, 12, 12, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5837),
                            InventoryId = 6,
                            StateId = 4
                        },
                        new
                        {
                            Id = 185,
                            CreationDate = new DateTime(2023, 6, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5841),
                            ExpirationDate = new DateTime(2024, 2, 10, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5843),
                            InventoryId = 7,
                            StateId = 4
                        },
                        new
                        {
                            Id = 186,
                            CreationDate = new DateTime(2022, 11, 21, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5848),
                            ExpirationDate = new DateTime(2024, 4, 10, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5850),
                            InventoryId = 7,
                            StateId = 3
                        },
                        new
                        {
                            Id = 187,
                            CreationDate = new DateTime(2022, 10, 31, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5854),
                            ExpirationDate = new DateTime(2023, 12, 26, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5856),
                            InventoryId = 9,
                            StateId = 1
                        },
                        new
                        {
                            Id = 188,
                            CreationDate = new DateTime(2022, 8, 15, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5860),
                            ExpirationDate = new DateTime(2024, 11, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5863),
                            InventoryId = 9,
                            StateId = 4
                        },
                        new
                        {
                            Id = 189,
                            CreationDate = new DateTime(2022, 7, 4, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5867),
                            ExpirationDate = new DateTime(2026, 3, 8, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5869),
                            InventoryId = 4,
                            StateId = 2
                        },
                        new
                        {
                            Id = 190,
                            CreationDate = new DateTime(2022, 12, 28, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5872),
                            ExpirationDate = new DateTime(2023, 10, 24, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5875),
                            InventoryId = 3,
                            StateId = 1
                        },
                        new
                        {
                            Id = 191,
                            CreationDate = new DateTime(2023, 4, 20, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5878),
                            ExpirationDate = new DateTime(2024, 8, 17, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5880),
                            InventoryId = 3,
                            StateId = 1
                        },
                        new
                        {
                            Id = 192,
                            CreationDate = new DateTime(2023, 1, 13, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5885),
                            ExpirationDate = new DateTime(2023, 11, 26, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5887),
                            InventoryId = 6,
                            StateId = 1
                        },
                        new
                        {
                            Id = 193,
                            CreationDate = new DateTime(2022, 1, 7, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5890),
                            ExpirationDate = new DateTime(2026, 3, 19, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5892),
                            InventoryId = 4,
                            StateId = 4
                        },
                        new
                        {
                            Id = 194,
                            CreationDate = new DateTime(2022, 5, 29, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5895),
                            ExpirationDate = new DateTime(2023, 11, 19, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5898),
                            InventoryId = 4,
                            StateId = 4
                        },
                        new
                        {
                            Id = 195,
                            CreationDate = new DateTime(2022, 8, 10, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5901),
                            ExpirationDate = new DateTime(2023, 10, 7, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5904),
                            InventoryId = 2,
                            StateId = 1
                        },
                        new
                        {
                            Id = 196,
                            CreationDate = new DateTime(2022, 3, 11, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5908),
                            ExpirationDate = new DateTime(2025, 12, 31, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5911),
                            InventoryId = 2,
                            StateId = 2
                        },
                        new
                        {
                            Id = 197,
                            CreationDate = new DateTime(2022, 8, 25, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5916),
                            ExpirationDate = new DateTime(2024, 5, 13, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5918),
                            InventoryId = 7,
                            StateId = 2
                        },
                        new
                        {
                            Id = 198,
                            CreationDate = new DateTime(2022, 7, 23, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5921),
                            ExpirationDate = new DateTime(2025, 6, 16, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5924),
                            InventoryId = 2,
                            StateId = 4
                        },
                        new
                        {
                            Id = 199,
                            CreationDate = new DateTime(2023, 1, 24, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5928),
                            ExpirationDate = new DateTime(2023, 11, 8, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5931),
                            InventoryId = 2,
                            StateId = 3
                        },
                        new
                        {
                            Id = 200,
                            CreationDate = new DateTime(2023, 2, 15, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5934),
                            ExpirationDate = new DateTime(2026, 1, 4, 20, 10, 2, 967, DateTimeKind.Local).AddTicks(5937),
                            InventoryId = 5,
                            StateId = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.MedicineBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("medicine_brand", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "TQ"
                        },
                        new
                        {
                            Id = 2,
                            Name = "MK"
                        },
                        new
                        {
                            Id = 3,
                            Name = "La Sante"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Durafex"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Ferrer"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Bayer"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Genfar"
                        });
                });

            modelBuilder.Entity("Domain.Entities.MedicineCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("medicine_category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Illegal"
                        });
                });

            modelBuilder.Entity("Domain.Entities.MedicineInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPk")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("description");

                    b.Property<float>("Discount")
                        .HasColumnType("float")
                        .HasColumnName("discount");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("image");

                    b.Property<int>("MedicineBrandId")
                        .HasColumnType("int")
                        .HasColumnName("medicineBrandId");

                    b.Property<int>("MedicineCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("medicineCategoryId");

                    b.Property<int>("MedicinePresentationId")
                        .HasColumnType("int")
                        .HasColumnName("medicinePresentationId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<float>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<bool>("RequiredRecipe")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("requiredRecipe");

                    b.HasKey("Id");

                    b.HasIndex("MedicineBrandId");

                    b.HasIndex("MedicineCategoryId");

                    b.HasIndex("MedicinePresentationId");

                    b.ToTable("medicineInfo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Alivia el dolor leve y moderado,\nVia oral 10 comprimidos",
                            Discount = 0f,
                            Image = "https://www.pmfarma.com/noticias/noticias/34179/image/gelocatil%20ferrer%20iqvia%20consumo%20de%20paracetamol%20ha%20aumentado.jpg",
                            MedicineBrandId = 5,
                            MedicineCategoryId = 1,
                            MedicinePresentationId = 1,
                            Name = "Paracetamol",
                            Price = 20f,
                            RequiredRecipe = true
                        },
                        new
                        {
                            Id = 2,
                            Description = "30 tabletas cubiertas de 1g",
                            Discount = 5f,
                            Image = "https://drogueriasantamaria.com/rails/active_storage/representations/proxy/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBOG9nQmc9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--89153d1d91681a39dfe201c944bf3c3f4d47ab2a/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9MWm05eWJXRjBTU0lJYW5CbkJqb0dSVlE2RW5KbGMybDZaVjkwYjE5bWFYUmJCMmtDSUFOcEFpQUQiLCJleHAiOm51bGwsInB1ciI6InZhcmlhdGlvbiJ9fQ==--70dc4abb6ac52505d9b5c972f6eb61cd265c8cf9/7702057164157-11.jpg?locale=es",
                            MedicineBrandId = 2,
                            MedicineCategoryId = 1,
                            MedicinePresentationId = 1,
                            Name = "Ibuprofeno",
                            Price = 25f,
                            RequiredRecipe = true
                        },
                        new
                        {
                            Id = 3,
                            Description = "104 tabletas de 100mg",
                            Discount = 10f,
                            Image = "https://copservir.vtexassets.com/arquivos/ids/1028189/ASPIRINA-100_F.png?v=638292392290900000",
                            MedicineBrandId = 5,
                            MedicineCategoryId = 1,
                            MedicinePresentationId = 1,
                            Name = "Aspirina",
                            Price = 15f,
                            RequiredRecipe = true
                        },
                        new
                        {
                            Id = 4,
                            Description = "50 capsulas 500mg",
                            Discount = 0f,
                            Image = "https://copservir.vtexassets.com/arquivos/ids/1027177-800-auto?v=638292281540200000&width=800&height=auto&aspect=true",
                            MedicineBrandId = 3,
                            MedicineCategoryId = 1,
                            MedicinePresentationId = 3,
                            Name = "Amoxicilina",
                            Price = 40f,
                            RequiredRecipe = true
                        },
                        new
                        {
                            Id = 5,
                            Description = "10 tabletas 10mg",
                            Discount = 0f,
                            Image = "https://copservir.vtexassets.com/arquivos/ids/989672-800-auto?v=638243980849430000&width=800&height=auto&aspect=true",
                            MedicineBrandId = 7,
                            MedicineCategoryId = 1,
                            MedicinePresentationId = 1,
                            Name = "Cetirizina",
                            Price = 10f,
                            RequiredRecipe = true
                        },
                        new
                        {
                            Id = 6,
                            Description = "30 tabletas recubiertas de 50mg via oral",
                            Discount = 0f,
                            Image = "https://pasteurio.vtexassets.com/arquivos/ids/174364/Salud-y-Medicamentos-Medicamentos-formulados_Genfar_Pasteur_134452_caja_01.jpg?v=638031144709070000",
                            MedicineBrandId = 7,
                            MedicineCategoryId = 1,
                            MedicinePresentationId = 1,
                            Name = "Losartan",
                            Price = 55f,
                            RequiredRecipe = true
                        },
                        new
                        {
                            Id = 7,
                            Description = "30 tabletas de 850mg",
                            Discount = 40f,
                            Image = "https://pymstatic.com/43895/conversions/metformina-wide.jpg",
                            MedicineBrandId = 2,
                            MedicineCategoryId = 1,
                            MedicinePresentationId = 1,
                            Name = "Metformina",
                            Price = 60f,
                            RequiredRecipe = true
                        },
                        new
                        {
                            Id = 8,
                            Description = "30 tabletas recubiertas de 30mg",
                            Discount = 12f,
                            Image = "https://www.farmalisto.com.co/154365/atorvastatina-10-mg-la-sante-caja-con-30-tabletas.jpg",
                            MedicineBrandId = 3,
                            MedicineCategoryId = 1,
                            MedicinePresentationId = 1,
                            Name = "Atorvastatina",
                            Price = 45f,
                            RequiredRecipe = true
                        },
                        new
                        {
                            Id = 9,
                            Description = "30 tabletas recubiertas de 2mg",
                            Discount = 0f,
                            Image = "https://farmastore.com.ve/192-large_default/sedatril-clonazepam-tq-2-mg-x-30-tabletas-rivotril.jpg",
                            MedicineBrandId = 1,
                            MedicineCategoryId = 1,
                            MedicinePresentationId = 1,
                            Name = "Clonazepam",
                            Price = 35f,
                            RequiredRecipe = true
                        },
                        new
                        {
                            Id = 10,
                            Description = "5 mg / 5ml jarabe de 100ml",
                            Discount = 0f,
                            Image = "https://www.drogueriasanjorge.com/wp-content/uploads/2012/03/7702605101641_A1N1_es_s01.jpg",
                            MedicineBrandId = 7,
                            MedicineCategoryId = 2,
                            MedicinePresentationId = 2,
                            Name = "Loratadina",
                            Price = 22f,
                            RequiredRecipe = true
                        });
                });

            modelBuilder.Entity("Domain.Entities.MedicinePresentation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("medicinepresentation", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "tablets"
                        },
                        new
                        {
                            Id = 2,
                            Name = "syrups"
                        },
                        new
                        {
                            Id = 3,
                            Name = "capsule"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPk")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("DateTime")
                        .HasColumnName("birthdate");

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("longtext");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int")
                        .HasColumnName("documentTypeIdFk");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<int>("PersonTypeId")
                        .HasColumnType("int")
                        .HasColumnName("personTypeIdFk");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("DateTime")
                        .HasColumnName("registerdate");

                    b.HasKey("Id");

                    b.HasIndex("DocumentTypeId");

                    b.HasIndex("PersonTypeId");

                    b.ToTable("person", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2023, 9, 27, 20, 10, 2, 971, DateTimeKind.Local).AddTicks(4507),
                            DocumentNumber = "0000000000",
                            DocumentTypeId = 3,
                            Name = "root",
                            PersonTypeId = 1,
                            RegisterDate = new DateTime(2023, 9, 27, 20, 10, 2, 971, DateTimeKind.Local).AddTicks(4483)
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2023, 9, 27, 20, 10, 2, 971, DateTimeKind.Local).AddTicks(4516),
                            DocumentNumber = "0000000001",
                            DocumentTypeId = 3,
                            Name = "ProveedorA",
                            PersonTypeId = 2,
                            RegisterDate = new DateTime(2023, 9, 27, 20, 10, 2, 971, DateTimeKind.Local).AddTicks(4515)
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(2023, 9, 27, 20, 10, 2, 971, DateTimeKind.Local).AddTicks(4520),
                            DocumentNumber = "0000000002",
                            DocumentTypeId = 3,
                            Name = "ProveedorB",
                            PersonTypeId = 2,
                            RegisterDate = new DateTime(2023, 9, 27, 20, 10, 2, 971, DateTimeKind.Local).AddTicks(4519)
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(2023, 9, 27, 20, 10, 2, 971, DateTimeKind.Local).AddTicks(4524),
                            DocumentNumber = "0000000003",
                            DocumentTypeId = 3,
                            Name = "ProveedorC",
                            PersonTypeId = 2,
                            RegisterDate = new DateTime(2023, 9, 27, 20, 10, 2, 971, DateTimeKind.Local).AddTicks(4523)
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DocumentNumber = "546869433",
                            DocumentTypeId = 1,
                            Name = "Juan Paco",
                            PersonTypeId = 1,
                            RegisterDate = new DateTime(2023, 9, 27, 20, 10, 2, 971, DateTimeKind.Local).AddTicks(4526)
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DocumentNumber = "546869433",
                            DocumentTypeId = 1,
                            Name = "Pedro De La Mar",
                            PersonTypeId = 1,
                            RegisterDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateTime(2014, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DocumentNumber = "1000354228",
                            DocumentTypeId = 2,
                            Name = "Maria Db",
                            PersonTypeId = 1,
                            RegisterDate = new DateTime(2023, 9, 27, 20, 10, 2, 971, DateTimeKind.Local).AddTicks(4540)
                        },
                        new
                        {
                            Id = 8,
                            BirthDate = new DateTime(1929, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DocumentNumber = "555903923",
                            DocumentTypeId = 1,
                            Name = "Ana frank",
                            PersonTypeId = 1,
                            RegisterDate = new DateTime(2019, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            BirthDate = new DateTime(1978, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DocumentNumber = "123456789",
                            DocumentTypeId = 1,
                            Name = "Luis Fonsi",
                            PersonTypeId = 1,
                            RegisterDate = new DateTime(2018, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            BirthDate = new DateTime(1957, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DocumentNumber = "4355466753",
                            DocumentTypeId = 1,
                            Name = "Sena Sofia",
                            PersonTypeId = 1,
                            RegisterDate = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            BirthDate = new DateTime(1987, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DocumentNumber = "74328957843",
                            DocumentTypeId = 1,
                            Name = "Elena de avalord",
                            PersonTypeId = 1,
                            RegisterDate = new DateTime(2001, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Domain.Entities.PersonType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("persontype", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Natural"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Juridica"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Recipe", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("idPk")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("detail");

                    b.Property<int>("EpsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("DateTime")
                        .HasColumnName("expirationdate");

                    b.Property<DateTime>("RecipeDate")
                        .HasColumnType("DateTime")
                        .HasColumnName("recipedate");

                    b.Property<int>("SaleId")
                        .HasColumnType("int")
                        .HasColumnName("saleIdFk");

                    b.HasKey("Id");

                    b.HasIndex("EpsId");

                    b.HasIndex("SaleId");

                    b.ToTable("recipe", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPk")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("descriptionRole");

                    b.HasKey("Id");

                    b.ToTable("role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPk")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employeeId");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("personId");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("DateTime")
                        .HasColumnName("saledate");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PersonId");

                    b.ToTable("sale", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 2,
                            PersonId = 6,
                            SaleDate = new DateTime(2023, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 2,
                            PersonId = 10,
                            SaleDate = new DateTime(2023, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            EmployeeId = 2,
                            PersonId = 9,
                            SaleDate = new DateTime(2023, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            EmployeeId = 3,
                            PersonId = 7,
                            SaleDate = new DateTime(2024, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            EmployeeId = 1,
                            PersonId = 8,
                            SaleDate = new DateTime(2024, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            EmployeeId = 1,
                            PersonId = 10,
                            SaleDate = new DateTime(2023, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            EmployeeId = 3,
                            PersonId = 10,
                            SaleDate = new DateTime(2023, 9, 24, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            EmployeeId = 1,
                            PersonId = 7,
                            SaleDate = new DateTime(2024, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            EmployeeId = 2,
                            PersonId = 6,
                            SaleDate = new DateTime(2024, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            EmployeeId = 2,
                            PersonId = 7,
                            SaleDate = new DateTime(2023, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            EmployeeId = 1,
                            PersonId = 10,
                            SaleDate = new DateTime(2024, 2, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            EmployeeId = 1,
                            PersonId = 5,
                            SaleDate = new DateTime(2023, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            EmployeeId = 3,
                            PersonId = 5,
                            SaleDate = new DateTime(2024, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            EmployeeId = 3,
                            PersonId = 5,
                            SaleDate = new DateTime(2023, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            EmployeeId = 2,
                            PersonId = 7,
                            SaleDate = new DateTime(2024, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            EmployeeId = 2,
                            PersonId = 9,
                            SaleDate = new DateTime(2023, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Domain.Entities.SaleDetail", b =>
                {
                    b.Property<int>("MedicineId")
                        .HasColumnType("int");

                    b.Property<int>("SaleId")
                        .HasColumnType("int");

                    b.HasKey("MedicineId", "SaleId");

                    b.HasIndex("SaleId");

                    b.ToTable("saleDetail", (string)null);

                    b.HasData(
                        new
                        {
                            MedicineId = 1,
                            SaleId = 13
                        },
                        new
                        {
                            MedicineId = 2,
                            SaleId = 13
                        },
                        new
                        {
                            MedicineId = 3,
                            SaleId = 9
                        },
                        new
                        {
                            MedicineId = 4,
                            SaleId = 9
                        },
                        new
                        {
                            MedicineId = 5,
                            SaleId = 10
                        },
                        new
                        {
                            MedicineId = 6,
                            SaleId = 7
                        },
                        new
                        {
                            MedicineId = 7,
                            SaleId = 5
                        },
                        new
                        {
                            MedicineId = 8,
                            SaleId = 7
                        },
                        new
                        {
                            MedicineId = 9,
                            SaleId = 11
                        },
                        new
                        {
                            MedicineId = 10,
                            SaleId = 13
                        },
                        new
                        {
                            MedicineId = 11,
                            SaleId = 14
                        },
                        new
                        {
                            MedicineId = 12,
                            SaleId = 10
                        },
                        new
                        {
                            MedicineId = 13,
                            SaleId = 8
                        },
                        new
                        {
                            MedicineId = 14,
                            SaleId = 15
                        },
                        new
                        {
                            MedicineId = 15,
                            SaleId = 11
                        },
                        new
                        {
                            MedicineId = 16,
                            SaleId = 7
                        },
                        new
                        {
                            MedicineId = 17,
                            SaleId = 8
                        },
                        new
                        {
                            MedicineId = 18,
                            SaleId = 4
                        },
                        new
                        {
                            MedicineId = 19,
                            SaleId = 2
                        },
                        new
                        {
                            MedicineId = 20,
                            SaleId = 11
                        },
                        new
                        {
                            MedicineId = 21,
                            SaleId = 13
                        },
                        new
                        {
                            MedicineId = 22,
                            SaleId = 15
                        },
                        new
                        {
                            MedicineId = 23,
                            SaleId = 13
                        },
                        new
                        {
                            MedicineId = 24,
                            SaleId = 12
                        },
                        new
                        {
                            MedicineId = 25,
                            SaleId = 7
                        },
                        new
                        {
                            MedicineId = 26,
                            SaleId = 2
                        },
                        new
                        {
                            MedicineId = 27,
                            SaleId = 2
                        },
                        new
                        {
                            MedicineId = 28,
                            SaleId = 13
                        },
                        new
                        {
                            MedicineId = 29,
                            SaleId = 11
                        },
                        new
                        {
                            MedicineId = 30,
                            SaleId = 5
                        },
                        new
                        {
                            MedicineId = 31,
                            SaleId = 11
                        },
                        new
                        {
                            MedicineId = 32,
                            SaleId = 11
                        },
                        new
                        {
                            MedicineId = 33,
                            SaleId = 6
                        },
                        new
                        {
                            MedicineId = 34,
                            SaleId = 5
                        },
                        new
                        {
                            MedicineId = 35,
                            SaleId = 12
                        },
                        new
                        {
                            MedicineId = 36,
                            SaleId = 12
                        },
                        new
                        {
                            MedicineId = 37,
                            SaleId = 3
                        },
                        new
                        {
                            MedicineId = 38,
                            SaleId = 15
                        },
                        new
                        {
                            MedicineId = 39,
                            SaleId = 3
                        },
                        new
                        {
                            MedicineId = 40,
                            SaleId = 8
                        },
                        new
                        {
                            MedicineId = 41,
                            SaleId = 15
                        },
                        new
                        {
                            MedicineId = 42,
                            SaleId = 6
                        },
                        new
                        {
                            MedicineId = 43,
                            SaleId = 10
                        },
                        new
                        {
                            MedicineId = 44,
                            SaleId = 9
                        },
                        new
                        {
                            MedicineId = 45,
                            SaleId = 14
                        },
                        new
                        {
                            MedicineId = 46,
                            SaleId = 4
                        },
                        new
                        {
                            MedicineId = 47,
                            SaleId = 14
                        },
                        new
                        {
                            MedicineId = 48,
                            SaleId = 9
                        },
                        new
                        {
                            MedicineId = 49,
                            SaleId = 1
                        },
                        new
                        {
                            MedicineId = 50,
                            SaleId = 15
                        },
                        new
                        {
                            MedicineId = 51,
                            SaleId = 14
                        },
                        new
                        {
                            MedicineId = 52,
                            SaleId = 5
                        },
                        new
                        {
                            MedicineId = 53,
                            SaleId = 1
                        },
                        new
                        {
                            MedicineId = 54,
                            SaleId = 5
                        },
                        new
                        {
                            MedicineId = 55,
                            SaleId = 6
                        },
                        new
                        {
                            MedicineId = 56,
                            SaleId = 8
                        },
                        new
                        {
                            MedicineId = 57,
                            SaleId = 12
                        },
                        new
                        {
                            MedicineId = 58,
                            SaleId = 15
                        },
                        new
                        {
                            MedicineId = 59,
                            SaleId = 13
                        },
                        new
                        {
                            MedicineId = 60,
                            SaleId = 11
                        },
                        new
                        {
                            MedicineId = 61,
                            SaleId = 7
                        },
                        new
                        {
                            MedicineId = 62,
                            SaleId = 14
                        },
                        new
                        {
                            MedicineId = 63,
                            SaleId = 10
                        },
                        new
                        {
                            MedicineId = 64,
                            SaleId = 7
                        },
                        new
                        {
                            MedicineId = 65,
                            SaleId = 10
                        },
                        new
                        {
                            MedicineId = 66,
                            SaleId = 9
                        },
                        new
                        {
                            MedicineId = 67,
                            SaleId = 10
                        },
                        new
                        {
                            MedicineId = 68,
                            SaleId = 3
                        },
                        new
                        {
                            MedicineId = 69,
                            SaleId = 11
                        },
                        new
                        {
                            MedicineId = 70,
                            SaleId = 4
                        },
                        new
                        {
                            MedicineId = 71,
                            SaleId = 8
                        },
                        new
                        {
                            MedicineId = 72,
                            SaleId = 12
                        },
                        new
                        {
                            MedicineId = 73,
                            SaleId = 8
                        },
                        new
                        {
                            MedicineId = 74,
                            SaleId = 9
                        },
                        new
                        {
                            MedicineId = 75,
                            SaleId = 14
                        },
                        new
                        {
                            MedicineId = 76,
                            SaleId = 2
                        },
                        new
                        {
                            MedicineId = 77,
                            SaleId = 4
                        },
                        new
                        {
                            MedicineId = 78,
                            SaleId = 11
                        },
                        new
                        {
                            MedicineId = 79,
                            SaleId = 14
                        },
                        new
                        {
                            MedicineId = 80,
                            SaleId = 7
                        },
                        new
                        {
                            MedicineId = 81,
                            SaleId = 9
                        },
                        new
                        {
                            MedicineId = 82,
                            SaleId = 11
                        },
                        new
                        {
                            MedicineId = 83,
                            SaleId = 15
                        },
                        new
                        {
                            MedicineId = 84,
                            SaleId = 3
                        },
                        new
                        {
                            MedicineId = 85,
                            SaleId = 11
                        },
                        new
                        {
                            MedicineId = 86,
                            SaleId = 11
                        },
                        new
                        {
                            MedicineId = 87,
                            SaleId = 14
                        },
                        new
                        {
                            MedicineId = 88,
                            SaleId = 13
                        },
                        new
                        {
                            MedicineId = 89,
                            SaleId = 3
                        },
                        new
                        {
                            MedicineId = 90,
                            SaleId = 12
                        },
                        new
                        {
                            MedicineId = 91,
                            SaleId = 7
                        },
                        new
                        {
                            MedicineId = 92,
                            SaleId = 1
                        },
                        new
                        {
                            MedicineId = 93,
                            SaleId = 1
                        },
                        new
                        {
                            MedicineId = 94,
                            SaleId = 6
                        },
                        new
                        {
                            MedicineId = 95,
                            SaleId = 7
                        },
                        new
                        {
                            MedicineId = 96,
                            SaleId = 7
                        },
                        new
                        {
                            MedicineId = 97,
                            SaleId = 3
                        },
                        new
                        {
                            MedicineId = 98,
                            SaleId = 4
                        },
                        new
                        {
                            MedicineId = 99,
                            SaleId = 8
                        });
                });

            modelBuilder.Entity("Domain.Entities.Shopping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPk")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employeeId");

                    b.Property<DateTime>("ShoppingDate")
                        .HasColumnType("DateTime")
                        .HasColumnName("shoppingDate");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("supplierId");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SupplierId");

                    b.ToTable("shopping", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 3,
                            ShoppingDate = new DateTime(2023, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 2,
                            ShoppingDate = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 3,
                            EmployeeId = 1,
                            ShoppingDate = new DateTime(2023, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 4,
                            EmployeeId = 2,
                            ShoppingDate = new DateTime(2023, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 5,
                            EmployeeId = 1,
                            ShoppingDate = new DateTime(2023, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 6,
                            EmployeeId = 2,
                            ShoppingDate = new DateTime(2023, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 7,
                            EmployeeId = 2,
                            ShoppingDate = new DateTime(2024, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 8,
                            EmployeeId = 1,
                            ShoppingDate = new DateTime(2023, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 9,
                            EmployeeId = 1,
                            ShoppingDate = new DateTime(2024, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 10,
                            EmployeeId = 3,
                            ShoppingDate = new DateTime(2023, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 11,
                            EmployeeId = 3,
                            ShoppingDate = new DateTime(2023, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 12,
                            EmployeeId = 2,
                            ShoppingDate = new DateTime(2023, 7, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 13,
                            EmployeeId = 3,
                            ShoppingDate = new DateTime(2023, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 14,
                            EmployeeId = 3,
                            ShoppingDate = new DateTime(2023, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 15,
                            EmployeeId = 3,
                            ShoppingDate = new DateTime(2023, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 16,
                            EmployeeId = 2,
                            ShoppingDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.ShoppingDetail", b =>
                {
                    b.Property<int>("MedicineId")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingId")
                        .HasColumnType("int");

                    b.HasKey("MedicineId", "ShoppingId");

                    b.HasIndex("ShoppingId");

                    b.ToTable("shoppingDetail", (string)null);

                    b.HasData(
                        new
                        {
                            MedicineId = 101,
                            ShoppingId = 14
                        },
                        new
                        {
                            MedicineId = 102,
                            ShoppingId = 14
                        },
                        new
                        {
                            MedicineId = 103,
                            ShoppingId = 6
                        },
                        new
                        {
                            MedicineId = 104,
                            ShoppingId = 10
                        },
                        new
                        {
                            MedicineId = 105,
                            ShoppingId = 11
                        },
                        new
                        {
                            MedicineId = 106,
                            ShoppingId = 5
                        },
                        new
                        {
                            MedicineId = 107,
                            ShoppingId = 4
                        },
                        new
                        {
                            MedicineId = 108,
                            ShoppingId = 14
                        },
                        new
                        {
                            MedicineId = 109,
                            ShoppingId = 9
                        },
                        new
                        {
                            MedicineId = 110,
                            ShoppingId = 1
                        },
                        new
                        {
                            MedicineId = 111,
                            ShoppingId = 13
                        },
                        new
                        {
                            MedicineId = 112,
                            ShoppingId = 10
                        },
                        new
                        {
                            MedicineId = 113,
                            ShoppingId = 2
                        },
                        new
                        {
                            MedicineId = 114,
                            ShoppingId = 7
                        },
                        new
                        {
                            MedicineId = 115,
                            ShoppingId = 11
                        },
                        new
                        {
                            MedicineId = 116,
                            ShoppingId = 5
                        },
                        new
                        {
                            MedicineId = 117,
                            ShoppingId = 7
                        },
                        new
                        {
                            MedicineId = 118,
                            ShoppingId = 14
                        },
                        new
                        {
                            MedicineId = 119,
                            ShoppingId = 9
                        },
                        new
                        {
                            MedicineId = 120,
                            ShoppingId = 9
                        },
                        new
                        {
                            MedicineId = 121,
                            ShoppingId = 5
                        },
                        new
                        {
                            MedicineId = 122,
                            ShoppingId = 13
                        },
                        new
                        {
                            MedicineId = 123,
                            ShoppingId = 3
                        },
                        new
                        {
                            MedicineId = 124,
                            ShoppingId = 11
                        },
                        new
                        {
                            MedicineId = 125,
                            ShoppingId = 13
                        },
                        new
                        {
                            MedicineId = 126,
                            ShoppingId = 12
                        },
                        new
                        {
                            MedicineId = 127,
                            ShoppingId = 12
                        },
                        new
                        {
                            MedicineId = 128,
                            ShoppingId = 13
                        },
                        new
                        {
                            MedicineId = 129,
                            ShoppingId = 6
                        },
                        new
                        {
                            MedicineId = 130,
                            ShoppingId = 12
                        },
                        new
                        {
                            MedicineId = 131,
                            ShoppingId = 7
                        },
                        new
                        {
                            MedicineId = 132,
                            ShoppingId = 14
                        },
                        new
                        {
                            MedicineId = 133,
                            ShoppingId = 3
                        },
                        new
                        {
                            MedicineId = 134,
                            ShoppingId = 9
                        },
                        new
                        {
                            MedicineId = 135,
                            ShoppingId = 1
                        },
                        new
                        {
                            MedicineId = 136,
                            ShoppingId = 12
                        },
                        new
                        {
                            MedicineId = 137,
                            ShoppingId = 15
                        },
                        new
                        {
                            MedicineId = 138,
                            ShoppingId = 8
                        },
                        new
                        {
                            MedicineId = 139,
                            ShoppingId = 15
                        },
                        new
                        {
                            MedicineId = 140,
                            ShoppingId = 13
                        },
                        new
                        {
                            MedicineId = 141,
                            ShoppingId = 7
                        },
                        new
                        {
                            MedicineId = 142,
                            ShoppingId = 10
                        },
                        new
                        {
                            MedicineId = 143,
                            ShoppingId = 7
                        },
                        new
                        {
                            MedicineId = 144,
                            ShoppingId = 12
                        },
                        new
                        {
                            MedicineId = 145,
                            ShoppingId = 9
                        },
                        new
                        {
                            MedicineId = 146,
                            ShoppingId = 5
                        },
                        new
                        {
                            MedicineId = 147,
                            ShoppingId = 8
                        },
                        new
                        {
                            MedicineId = 148,
                            ShoppingId = 10
                        },
                        new
                        {
                            MedicineId = 149,
                            ShoppingId = 8
                        },
                        new
                        {
                            MedicineId = 150,
                            ShoppingId = 15
                        },
                        new
                        {
                            MedicineId = 151,
                            ShoppingId = 14
                        },
                        new
                        {
                            MedicineId = 152,
                            ShoppingId = 14
                        },
                        new
                        {
                            MedicineId = 153,
                            ShoppingId = 15
                        },
                        new
                        {
                            MedicineId = 154,
                            ShoppingId = 13
                        },
                        new
                        {
                            MedicineId = 155,
                            ShoppingId = 9
                        },
                        new
                        {
                            MedicineId = 156,
                            ShoppingId = 7
                        },
                        new
                        {
                            MedicineId = 157,
                            ShoppingId = 4
                        },
                        new
                        {
                            MedicineId = 158,
                            ShoppingId = 5
                        },
                        new
                        {
                            MedicineId = 159,
                            ShoppingId = 11
                        },
                        new
                        {
                            MedicineId = 160,
                            ShoppingId = 9
                        },
                        new
                        {
                            MedicineId = 161,
                            ShoppingId = 14
                        },
                        new
                        {
                            MedicineId = 162,
                            ShoppingId = 11
                        },
                        new
                        {
                            MedicineId = 163,
                            ShoppingId = 6
                        },
                        new
                        {
                            MedicineId = 164,
                            ShoppingId = 12
                        },
                        new
                        {
                            MedicineId = 165,
                            ShoppingId = 12
                        },
                        new
                        {
                            MedicineId = 166,
                            ShoppingId = 10
                        },
                        new
                        {
                            MedicineId = 167,
                            ShoppingId = 6
                        },
                        new
                        {
                            MedicineId = 168,
                            ShoppingId = 15
                        },
                        new
                        {
                            MedicineId = 169,
                            ShoppingId = 1
                        },
                        new
                        {
                            MedicineId = 170,
                            ShoppingId = 8
                        },
                        new
                        {
                            MedicineId = 171,
                            ShoppingId = 15
                        },
                        new
                        {
                            MedicineId = 172,
                            ShoppingId = 1
                        },
                        new
                        {
                            MedicineId = 173,
                            ShoppingId = 11
                        },
                        new
                        {
                            MedicineId = 174,
                            ShoppingId = 3
                        },
                        new
                        {
                            MedicineId = 175,
                            ShoppingId = 11
                        },
                        new
                        {
                            MedicineId = 176,
                            ShoppingId = 15
                        },
                        new
                        {
                            MedicineId = 177,
                            ShoppingId = 6
                        },
                        new
                        {
                            MedicineId = 178,
                            ShoppingId = 8
                        },
                        new
                        {
                            MedicineId = 179,
                            ShoppingId = 4
                        },
                        new
                        {
                            MedicineId = 180,
                            ShoppingId = 10
                        },
                        new
                        {
                            MedicineId = 181,
                            ShoppingId = 1
                        },
                        new
                        {
                            MedicineId = 182,
                            ShoppingId = 8
                        },
                        new
                        {
                            MedicineId = 183,
                            ShoppingId = 2
                        },
                        new
                        {
                            MedicineId = 184,
                            ShoppingId = 12
                        },
                        new
                        {
                            MedicineId = 185,
                            ShoppingId = 7
                        },
                        new
                        {
                            MedicineId = 186,
                            ShoppingId = 12
                        },
                        new
                        {
                            MedicineId = 187,
                            ShoppingId = 15
                        },
                        new
                        {
                            MedicineId = 188,
                            ShoppingId = 2
                        },
                        new
                        {
                            MedicineId = 189,
                            ShoppingId = 2
                        },
                        new
                        {
                            MedicineId = 190,
                            ShoppingId = 8
                        },
                        new
                        {
                            MedicineId = 191,
                            ShoppingId = 7
                        },
                        new
                        {
                            MedicineId = 192,
                            ShoppingId = 12
                        },
                        new
                        {
                            MedicineId = 193,
                            ShoppingId = 9
                        },
                        new
                        {
                            MedicineId = 194,
                            ShoppingId = 5
                        },
                        new
                        {
                            MedicineId = 195,
                            ShoppingId = 5
                        },
                        new
                        {
                            MedicineId = 196,
                            ShoppingId = 9
                        },
                        new
                        {
                            MedicineId = 197,
                            ShoppingId = 7
                        },
                        new
                        {
                            MedicineId = 198,
                            ShoppingId = 2
                        },
                        new
                        {
                            MedicineId = 199,
                            ShoppingId = 4
                        });
                });

            modelBuilder.Entity("Domain.Entities.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("state", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "default"
                        },
                        new
                        {
                            Id = 2,
                            Description = "expired"
                        },
                        new
                        {
                            Id = 3,
                            Description = "damaged"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Sold"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Returned"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPk")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("SupplierTypeId");

                    b.ToTable("supplier", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PersonId = 2,
                            SupplierTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            PersonId = 3,
                            SupplierTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            PersonId = 4,
                            SupplierTypeId = 3
                        });
                });

            modelBuilder.Entity("Domain.Entities.SupplierType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPk")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("suppliertypename");

                    b.HasKey("Id");

                    b.ToTable("suppliertype", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Drugs"
                        },
                        new
                        {
                            Id = 2,
                            Name = "syrups"
                        },
                        new
                        {
                            Id = 3,
                            Name = "hallucinogens"
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPk")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessToken")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("accessToken");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("password");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("refreshToken");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.HasIndex("UserName", "Email")
                        .IsUnique()
                        .HasDatabaseName("IX_Username_Email");

                    b.ToTable("user", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "root",
                            PersonId = 1,
                            UserName = "root"
                        });
                });

            modelBuilder.Entity("Domain.Entities.UserRol", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRol");
                });

            modelBuilder.Entity("Domain.Entities.Address", b =>
                {
                    b.HasOne("Domain.Entities.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Person", "Person")
                        .WithMany("Addresses")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Domain.Entities.City", b =>
                {
                    b.HasOne("Domain.Entities.Department", "Department")
                        .WithMany("Cities")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Domain.Entities.Contact", b =>
                {
                    b.HasOne("Domain.Entities.ContactCategory", "ContactCategory")
                        .WithMany("Contacts")
                        .HasForeignKey("ContactCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.ContactType", "ContactType")
                        .WithMany("Contacts")
                        .HasForeignKey("ContactTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Person", "Person")
                        .WithMany("Contacts")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactCategory");

                    b.Navigation("ContactType");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Domain.Entities.Department", b =>
                {
                    b.HasOne("Domain.Entities.Country", "Country")
                        .WithMany("Departments")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Domain.Entities.Employee", b =>
                {
                    b.HasOne("Domain.Entities.Charge", "Charge")
                        .WithMany("Employees")
                        .HasForeignKey("ChargeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Person", "Person")
                        .WithOne("Employee")
                        .HasForeignKey("Domain.Entities.Employee", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Charge");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Domain.Entities.Eps", b =>
                {
                    b.HasOne("Domain.Entities.EpsType", "EpsType")
                        .WithMany("Epss")
                        .HasForeignKey("EpsTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Person", "Person")
                        .WithOne("PersonEps")
                        .HasForeignKey("Domain.Entities.Eps", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EpsType");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Domain.Entities.EpsEmployee", b =>
                {
                    b.HasOne("Domain.Entities.Employee", "Employee")
                        .WithMany("EpsEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Eps", "Eps")
                        .WithMany("EpsEmployees")
                        .HasForeignKey("EpsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Eps");
                });

            modelBuilder.Entity("Domain.Entities.Inventory", b =>
                {
                    b.HasOne("Domain.Entities.MedicineInfo", "MedicineInfo")
                        .WithMany("Inventories")
                        .HasForeignKey("MedicineInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MedicineInfo");
                });

            modelBuilder.Entity("Domain.Entities.Medicine", b =>
                {
                    b.HasOne("Domain.Entities.Inventory", "Inventory")
                        .WithMany("Medicines")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.State", "State")
                        .WithMany("Medicines")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Domain.Entities.MedicineInfo", b =>
                {
                    b.HasOne("Domain.Entities.MedicineBrand", "MedicineBrand")
                        .WithMany("MedicineInfos")
                        .HasForeignKey("MedicineBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.MedicineCategory", "MedicineCategory")
                        .WithMany("MedicineInfos")
                        .HasForeignKey("MedicineCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.MedicinePresentation", "MedicinePresentation")
                        .WithMany("Medicines")
                        .HasForeignKey("MedicinePresentationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MedicineBrand");

                    b.Navigation("MedicineCategory");

                    b.Navigation("MedicinePresentation");
                });

            modelBuilder.Entity("Domain.Entities.Person", b =>
                {
                    b.HasOne("Domain.Entities.DocumentType", "DocumentType")
                        .WithMany("Persons")
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.PersonType", "PersonType")
                        .WithMany("Person")
                        .HasForeignKey("PersonTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentType");

                    b.Navigation("PersonType");
                });

            modelBuilder.Entity("Domain.Entities.Recipe", b =>
                {
                    b.HasOne("Domain.Entities.Eps", "Eps")
                        .WithMany("Recipes")
                        .HasForeignKey("EpsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Sale", "Sale")
                        .WithMany("Recipes")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eps");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("Domain.Entities.Sale", b =>
                {
                    b.HasOne("Domain.Entities.Employee", "Employee")
                        .WithMany("Sales")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Person", "Person")
                        .WithMany("Sales")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Domain.Entities.SaleDetail", b =>
                {
                    b.HasOne("Domain.Entities.Medicine", "Medicine")
                        .WithMany("SaleDetails")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Sale", "Sale")
                        .WithMany("SaleDetails")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("Domain.Entities.Shopping", b =>
                {
                    b.HasOne("Domain.Entities.Employee", "Employee")
                        .WithMany("Shoppings")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Supplier", "Supplier")
                        .WithMany("Shoppings")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Domain.Entities.ShoppingDetail", b =>
                {
                    b.HasOne("Domain.Entities.Medicine", "Medicine")
                        .WithMany("ShoppingDetails")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Shopping", "Shopping")
                        .WithMany("ShoppingDetails")
                        .HasForeignKey("ShoppingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("Shopping");
                });

            modelBuilder.Entity("Domain.Entities.Supplier", b =>
                {
                    b.HasOne("Domain.Entities.Person", "Person")
                        .WithMany("Suppliers")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.SupplierType", "SupplierType")
                        .WithMany("Suppliers")
                        .HasForeignKey("SupplierTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("SupplierType");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.HasOne("Domain.Entities.Person", "Person")
                        .WithOne("User")
                        .HasForeignKey("Domain.Entities.User", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Domain.Entities.UserRol", b =>
                {
                    b.HasOne("Domain.Entities.Role", "Role")
                        .WithMany("UserRols")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("UserRols")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Charge", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Domain.Entities.City", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Domain.Entities.ContactCategory", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("Domain.Entities.ContactType", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("Domain.Entities.Country", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("Domain.Entities.Department", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("Domain.Entities.DocumentType", b =>
                {
                    b.Navigation("Persons");
                });

            modelBuilder.Entity("Domain.Entities.Employee", b =>
                {
                    b.Navigation("EpsEmployees");

                    b.Navigation("Sales");

                    b.Navigation("Shoppings");
                });

            modelBuilder.Entity("Domain.Entities.Eps", b =>
                {
                    b.Navigation("EpsEmployees");

                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("Domain.Entities.EpsType", b =>
                {
                    b.Navigation("Epss");
                });

            modelBuilder.Entity("Domain.Entities.Inventory", b =>
                {
                    b.Navigation("Medicines");
                });

            modelBuilder.Entity("Domain.Entities.Medicine", b =>
                {
                    b.Navigation("SaleDetails");

                    b.Navigation("ShoppingDetails");
                });

            modelBuilder.Entity("Domain.Entities.MedicineBrand", b =>
                {
                    b.Navigation("MedicineInfos");
                });

            modelBuilder.Entity("Domain.Entities.MedicineCategory", b =>
                {
                    b.Navigation("MedicineInfos");
                });

            modelBuilder.Entity("Domain.Entities.MedicineInfo", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("Domain.Entities.MedicinePresentation", b =>
                {
                    b.Navigation("Medicines");
                });

            modelBuilder.Entity("Domain.Entities.Person", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Contacts");

                    b.Navigation("Employee");

                    b.Navigation("PersonEps");

                    b.Navigation("Sales");

                    b.Navigation("Suppliers");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.PersonType", b =>
                {
                    b.Navigation("Person");
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Navigation("UserRols");
                });

            modelBuilder.Entity("Domain.Entities.Sale", b =>
                {
                    b.Navigation("Recipes");

                    b.Navigation("SaleDetails");
                });

            modelBuilder.Entity("Domain.Entities.Shopping", b =>
                {
                    b.Navigation("ShoppingDetails");
                });

            modelBuilder.Entity("Domain.Entities.State", b =>
                {
                    b.Navigation("Medicines");
                });

            modelBuilder.Entity("Domain.Entities.Supplier", b =>
                {
                    b.Navigation("Shoppings");
                });

            modelBuilder.Entity("Domain.Entities.SupplierType", b =>
                {
                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("UserRols");
                });
#pragma warning restore 612, 618
        }
    }
}
